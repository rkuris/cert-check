{"name":"Cert-check","tagline":"Certificate expiration checker","body":"# cert-check\r\n\r\nSuper simple check a list of certificates and output something\r\nif the cert expires within the warning period.\r\n\r\nThis is intended to be stuck in a daily cron job to watch for\r\ncertificate expirations. If anything goes wrong or there is a cert\r\nthat is about to expire, this code tells you about it.\r\n\r\nKind of just starting with go and wanted something to whip up,\r\nand so thought this might be useful later for someone.\r\n\r\nInspired by Kris Pruden's reference to this article:\r\n\r\nhttp://www.theguardian.com/technology/2015/nov/12/apple-user-anger-mac-apps-break-security-certificate-lapse\r\n\r\n## Configuring\r\n\r\n~~Right now, everything is hardcoded. You probably want to change the\r\nlist of sites it checks and how many days before it warns you.~~\r\n\r\nGood news!  cert-check now supports command line arguments.  The\r\n-notify argument reports any site below that threshold in days.\r\nAll other arguments are considered sites to be checked.\r\n\r\n## Running\r\n\r\nEasy to run if the go system is installed:\r\n```sh\r\ngo run check-cert.go okta.okta.com:443\r\n```\r\n\r\nYou can also precompile it for a specific architecture and run cert-check\r\ninstead, which then doesn't require any go on the machine:\r\n\r\n```sh\r\ngo build cert-check.go\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}